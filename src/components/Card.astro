---
import gitHubPlaceholder from '../assets/images/github-placeholder.jpg'
import {normalizeGitHubRepoName} from '../js/utilities'

const {item, cardTheme} = Astro.props
const theme = cardTheme ? cardTheme : ""
const topicsArray = item.topics
const filteredTopics = topicsArray.filter(value => value !== 'featured-repo')
---

<style>
  .card[data-theme="light"] {
    /* background-color: var(--mine-shaft); */
  }
  .card[data-theme="light"] a {
    /* color: var(--white); */
  }
  .card {
    border-radius: var(--rounded-corners);
    padding: 1em;
    min-width: 200px;
    transition: box-shadow 200ms ease-in-out;
    box-shadow: var(--brand-box-shadow);
    display: flex;
    flex-direction: column;
  }
  @media screen and (min-width: 500px) {
    .card__title {
      height: 55px;
    }
  }
  .card:hover {
    box-shadow: var(--brand-box-shadow-hovered);
  }
  .card__image {
    border: 2px solid var(--darkness);
  }
  .card__desc {
    font-size: .9rem;
    margin-bottom: .75em;
  }
  .topic__row {
    padding-left: 0;
  }
  .card__links-container {
    margin-top: auto;
  }
</style>

<div class="card" data-theme={theme}>
  <h3 class="card__title"><a class="brand-link" target="_blank" href={item.html_url}>{normalizeGitHubRepoName(item.name)}</a></h3>
  <a class="card__image-container" aria-label={item.name} href={item.homepage ? item.homepage : item.html_url}><img class="card__image" src={item.featureImage ? item.featureImage : gitHubPlaceholder.src} alt={item.name}></a>
  <p class="card__desc">{item.description}</p>
  <ul class='topic__row'>
    {filteredTopics.map(topic => <li class='topic__badge'>{topic}</li>)}
  </ul>
  <div class="card__links-container">
    {item.homepage && <a class="card__link brand-link" target="_blank" href={item.homepage}>Visit Site</a><br />}
    <a class="card__link brand-link brand-link--callout" target="_blank" href={item.html_url}>View on GitHub</a>
  </div>
</div>